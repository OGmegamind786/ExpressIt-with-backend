[{"K:\\1_IIDE_SOC\\~Project\\Main client\\ExpressIt\\src\\index.js":"1","K:\\1_IIDE_SOC\\~Project\\Main client\\ExpressIt\\src\\reportWebVitals.js":"2","K:\\1_IIDE_SOC\\~Project\\Main client\\ExpressIt\\src\\App.js":"3","K:\\1_IIDE_SOC\\~Project\\Main client\\ExpressIt\\src\\components\\Home.js":"4","K:\\1_IIDE_SOC\\~Project\\Main client\\ExpressIt\\src\\components\\Login.js":"5","K:\\1_IIDE_SOC\\~Project\\Main client\\ExpressIt\\src\\components\\Register.js":"6","K:\\1_IIDE_SOC\\~Project\\Main client\\ExpressIt\\src\\components\\Profile.js":"7","K:\\1_IIDE_SOC\\~Project\\Main client\\ExpressIt\\src\\components\\CreateProfile.js":"8","K:\\1_IIDE_SOC\\~Project\\Main client\\ExpressIt\\src\\components\\Navbar.js":"9","K:\\1_IIDE_SOC\\~Project\\Main client\\ExpressIt\\src\\components\\Explore.js":"10","K:\\1_IIDE_SOC\\~Project\\Main client\\ExpressIt\\src\\components\\ProtectedRoute.js":"11","K:\\1_IIDE_SOC\\~Project\\Main client\\ExpressIt\\src\\components\\CreateExpresso.js":"12","K:\\1_IIDE_SOC\\~Project\\Main client\\ExpressIt\\src\\components\\Favourites.js":"13","K:\\1_IIDE_SOC\\~Project\\Main client\\ExpressIt\\src\\components\\About.js":"14","K:\\1_IIDE_SOC\\~Project\\Main client\\ExpressIt\\src\\components\\Landing.js":"15","K:\\1_IIDE_SOC\\~Project\\Main client\\ExpressIt\\src\\components\\Contact.js":"16","K:\\1_IIDE_SOC\\~Project\\Main client\\ExpressIt\\src\\components\\RenderPost.js":"17","K:\\1_IIDE_SOC\\~Project\\Main client\\ExpressIt\\src\\components\\RenderAuthButton.js":"18","K:\\1_IIDE_SOC\\~Project\\Main client\\ExpressIt\\src\\config.js":"19"},{"size":517,"mtime":1608447236605,"results":"20","hashOfConfig":"21"},{"size":375,"mtime":1608447236606,"results":"22","hashOfConfig":"21"},{"size":1826,"mtime":1609511040215,"results":"23","hashOfConfig":"21"},{"size":893,"mtime":1609300892127,"results":"24","hashOfConfig":"21"},{"size":3186,"mtime":1609301890991,"results":"25","hashOfConfig":"21"},{"size":4478,"mtime":1609416979900,"results":"26","hashOfConfig":"21"},{"size":6875,"mtime":1609512060011,"results":"27","hashOfConfig":"21"},{"size":4203,"mtime":1609498049515,"results":"28","hashOfConfig":"21"},{"size":2831,"mtime":1609302405166,"results":"29","hashOfConfig":"21"},{"size":9519,"mtime":1609496293245,"results":"30","hashOfConfig":"21"},{"size":514,"mtime":1608968033124,"results":"31","hashOfConfig":"21"},{"size":5114,"mtime":1609302126707,"results":"32","hashOfConfig":"21"},{"size":3396,"mtime":1609415836848,"results":"33","hashOfConfig":"21"},{"size":979,"mtime":1608447236391,"results":"34","hashOfConfig":"21"},{"size":1056,"mtime":1608447236393,"results":"35","hashOfConfig":"21"},{"size":3167,"mtime":1609302030383,"results":"36","hashOfConfig":"21"},{"size":571,"mtime":1609491633391,"results":"37","hashOfConfig":"21"},{"size":669,"mtime":1609136108212,"results":"38","hashOfConfig":"21"},{"size":118,"mtime":1609301848127,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1f268k7",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"42"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"42"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"K:\\1_IIDE_SOC\\~Project\\Main client\\ExpressIt\\src\\index.js",[],["84","85"],"K:\\1_IIDE_SOC\\~Project\\Main client\\ExpressIt\\src\\reportWebVitals.js",[],"K:\\1_IIDE_SOC\\~Project\\Main client\\ExpressIt\\src\\App.js",["86"],"K:\\1_IIDE_SOC\\~Project\\Main client\\ExpressIt\\src\\components\\Home.js",["87","88","89","90","91","92"],"import React, { useEffect } from \"react\";\r\nimport \"../Home.css\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport Landing from \"../components/Landing\";\r\nimport About from \"../components/About\";\r\nimport Contact from \"../components/Contact\";\r\nimport Profile from \"../components/Profile\";\r\nimport CreateProfile from \"../components/CreateProfile\";\r\nimport CreateExpresso from \"../components/CreateExpresso\";\r\nimport Explore from \"../components/Explore\";\r\nimport Favourites from \"../components/Favourites\";\r\n\r\nfunction Home() {\r\n  useEffect(() => {\r\n    console.log(process.env);\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {/* <Navbar /> */}\r\n      <Landing />\r\n      <About />\r\n      <Contact />\r\n\r\n      {/* <Profile /> */}\r\n\r\n      {/* <CreateExpresso /> */}\r\n      {/* <Explore /> */}\r\n      {/* <Favourites /> */}\r\n      {/* <CreateProfile / */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","K:\\1_IIDE_SOC\\~Project\\Main client\\ExpressIt\\src\\components\\Login.js",[],"K:\\1_IIDE_SOC\\~Project\\Main client\\ExpressIt\\src\\components\\Register.js",[],"K:\\1_IIDE_SOC\\~Project\\Main client\\ExpressIt\\src\\components\\Profile.js",[],"K:\\1_IIDE_SOC\\~Project\\Main client\\ExpressIt\\src\\components\\CreateProfile.js",["93","94"],"import Axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"../CreateProfile.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport backendUrl from \"../config\";\r\n\r\nfunction CreateProfile() {\r\n  const history = useHistory();\r\n  const [data, setData] = useState({});\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [age, setAge] = useState();\r\n  const [about, setAbout] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n\r\n  const [errors, setErrors] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const res = await Axios.get(`${backendUrl}/users/me/profile`, {\r\n        headers: { Authorization: localStorage.getItem(\"SavedToken\") },\r\n      });\r\n      setData(res.data);\r\n      setName(res.data.name);\r\n      setAge(res.data.age);\r\n      setAbout(res.data.userDescription);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const validate = () => {\r\n    let nameError = \"\";\r\n    let ageError = \"\";\r\n    let aboutError = \"\";\r\n\r\n    if (name === \"\") {\r\n      nameError = \" name cannot be empty\";\r\n    }\r\n\r\n    if (age === \"\") {\r\n      ageError = \" age cannot be empty\";\r\n    } else if (isNaN(age)) {\r\n      ageError = \"age should be a number\";\r\n    }\r\n\r\n    if (about === \"\") {\r\n      aboutError = \" Field cannot be empty\";\r\n    }\r\n\r\n    if (nameError || ageError || aboutError) {\r\n      setErrors({\r\n        ...errors,\r\n        name: nameError,\r\n        age: ageError,\r\n        about: aboutError,\r\n      });\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleCreateProfile = async () => {\r\n    const dataToSend = {\r\n      name: name,\r\n      age: age,\r\n      userDescription: about,\r\n    };\r\n    const isValid = validate();\r\n    if (isValid) {\r\n      setErrors({});\r\n      try {\r\n        const form = new FormData();\r\n        form.append(\"name\", name);\r\n        form.append(\"age\", age);\r\n        form.append(\"userDescription\", about);\r\n        form.append(\"image\", image);\r\n        const res = await Axios.post(\r\n          \"http://localhost:3012/users/me/createProfile\",\r\n          form,\r\n          {\r\n            headers: { Authorization: localStorage.getItem(\"SavedToken\") },\r\n          }\r\n        );\r\n        history.push(\"/users/me/profile\");\r\n        console.log(res);\r\n      } catch (error) {\r\n        alert(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"clicked submit\");\r\n    handleCreateProfile();\r\n  };\r\n  return (\r\n    <div id=\"create-profile\">\r\n      <h1>\r\n        Create Your <strong>ExpressIt</strong> Profile\r\n      </h1>\r\n      <p>We would like to know you better. Tell us about yourself.</p>\r\n\r\n      <form\r\n        onSubmit={handleSubmit}\r\n        encType=\"multipart/form-data\"\r\n        method=\"post\"\r\n        action=\"users/me/createProfile\"\r\n      >\r\n        <div>What is your Name?</div>\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          onChange={(e) => {\r\n            setName(e.target.value);\r\n          }}\r\n          value={name}\r\n        />\r\n        <div className=\"text-danger\">{errors.name}</div>\r\n\r\n        <br />\r\n        <div>\r\n          <input\r\n            type=\"file\"\r\n            name=\"image\"\r\n            accept=\"image/*\"\r\n            onChange={(e) => {\r\n              setImage(e.target.files[0]);\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <br />\r\n\r\n        <div>How old are you?</div>\r\n        <input\r\n          type=\"number\"\r\n          name=\"age\"\r\n          onChange={(e) => {\r\n            setAge(e.target.value);\r\n          }}\r\n          value={age}\r\n        />\r\n        <div className=\"text-danger\">{errors.age}</div>\r\n\r\n        <br />\r\n\r\n        <div>Describe yourself in short</div>\r\n        <textarea\r\n          type=\"text\"\r\n          name=\"about\"\r\n          onChange={(e) => {\r\n            setAbout(e.target.value);\r\n          }}\r\n          value={about}\r\n        />\r\n        <div className=\"text-danger\">{errors.about}</div>\r\n\r\n        <br />\r\n\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Create Profile\"\r\n          className=\"submit-btn\"\r\n          onClick={handleSubmit}\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateProfile;\r\n","K:\\1_IIDE_SOC\\~Project\\Main client\\ExpressIt\\src\\components\\Navbar.js",["95","96","97","98","99","100"],"import React, { useEffect, useState } from \"react\";\r\nimport \"../Navbar.css\";\r\nimport Login from \"../components/Login\";\r\nimport Register from \"../components/Register\";\r\nimport Home from \"../components/Home\";\r\nimport backendUrl from \"../config\";\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useHistory,\r\n  useLocation,\r\n} from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\nimport RenderAuthButton from \"./RenderAuthButton\";\r\n\r\nfunction Navbar() {\r\n  const history = useHistory();\r\n  const [isLoggedIn, setIsLoggedIn] = useState(true);\r\n  const [displayNone, setDisplayNone] = useState();\r\n  const [displayOnProfile, setDisplayOnProfile] = useState(\"block\");\r\n  const [displayOnFeed, setDisplayOnFeed] = useState(\"block\");\r\n\r\n  const currentLocation = useLocation();\r\n\r\n  useEffect(() => {\r\n    if (!localStorage.getItem(\"SavedToken\")) {\r\n      setIsLoggedIn(false);\r\n    }\r\n    const toggleProfile = () => {\r\n      if (currentLocation.pathname === \"/users/me/profile\") {\r\n        setDisplayOnProfile(\"none\");\r\n      } else {\r\n        setDisplayOnProfile(\"block\");\r\n      }\r\n    };\r\n    const toggleFeed = () => {\r\n      if (currentLocation.pathname === \"/users/me/feed\") {\r\n        setDisplayOnFeed(\"none\");\r\n      } else {\r\n        setDisplayOnFeed(\"block\");\r\n      }\r\n    };\r\n    toggleProfile();\r\n    toggleFeed();\r\n  }, [currentLocation.pathname]);\r\n\r\n  const handleLoginClick = () => {\r\n    setDisplayNone(\"none\");\r\n  };\r\n\r\n  const handleExpressItClick = () => {\r\n    setDisplayNone(\"block\");\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      await Axios.post(\r\n        `${backendUrl}/users/me/logout`,\r\n        {},\r\n        {\r\n          headers: { Authorization: localStorage.getItem(\"SavedToken\") },\r\n        }\r\n      );\r\n      localStorage.clear(\"SavedToken\");\r\n      setIsLoggedIn(false);\r\n      history.push(\"/users/login\");\r\n    } catch (error) {\r\n      alert(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"navbar-custom d-flex bd-highlight mb-3 \">\r\n      <div\r\n        className=\"logo mr-auto p-2 bd-highlight\"\r\n        onClick={handleExpressItClick}\r\n      >\r\n        <Link to=\"/\">ExpressIt</Link>\r\n      </div>\r\n      <div\r\n        className=\"link p-2 bd-highlight align-self-center\"\r\n        style={{ display: displayOnFeed }}\r\n      >\r\n        <Link to=\"/users/me/feed\">Feed</Link>\r\n      </div>\r\n      <div\r\n        className=\"link p-2 bd-highlight align-self-center\"\r\n        style={{ display: displayOnProfile }}\r\n      >\r\n        <Link to=\"/users/me/profile\">Profile</Link>\r\n      </div>\r\n\r\n      <RenderAuthButton\r\n        isLoggedIn={isLoggedIn}\r\n        onClickLogout={handleLogout}\r\n        onClickLogin={handleLoginClick}\r\n        displayNone={displayNone}\r\n        setIsLoggedIn={setIsLoggedIn}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","K:\\1_IIDE_SOC\\~Project\\Main client\\ExpressIt\\src\\components\\Explore.js",["101"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport backendUrl from \"../config\";\r\n\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\n\r\nimport \"../Explore.css\";\r\nimport RenderPost from \"./RenderPost\";\r\nimport TinderCard from \"react-tinder-card\";\r\nimport Popup from \"reactjs-popup\";\r\nimport PullToRefresh from \"react-simple-pull-to-refresh\";\r\n\r\nfunction Explore() {\r\n  const [data, setData] = useState([]);\r\n  const [filteredData, setFilteredData] = useState([]);\r\n  const [isFilterOn, setIsFilterOn] = useState(false);\r\n  const [category, setCategory] = useState(\"\");\r\n\r\n  const buttonRefs = useRef([]);\r\n  buttonRefs.current = [];\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const res = await Axios.get(`${backendUrl}/users/me/feed`, {\r\n        headers: { Authorization: localStorage.getItem(\"SavedToken\") },\r\n      });\r\n      setData(res.data);\r\n      console.log(res.data);\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  const onFilterData = async () => {\r\n    const res = await Axios.get(`${backendUrl}/users/me/feed/search`, {\r\n      headers: { Authorization: localStorage.getItem(\"SavedToken\") },\r\n      params: { category: category },\r\n    });\r\n    setFilteredData(res.data);\r\n  };\r\n\r\n  const handleFilterToggle = () => {\r\n    setIsFilterOn(true);\r\n    onFilterData();\r\n  };\r\n\r\n  const swiped = async (direction, expressoID) => {\r\n    console.log(\"you swiped \" + direction);\r\n    if (direction === \"right\") {\r\n      try {\r\n        const dataToSend = {\r\n          expresso_id: expressoID,\r\n        };\r\n        const res = await Axios.post(\r\n          `${backendUrl}/users/me/addToFavorite`,\r\n          dataToSend,\r\n          {\r\n            headers: { Authorization: localStorage.getItem(\"SavedToken\") },\r\n          }\r\n        );\r\n        console.log(res);\r\n      } catch (error) {\r\n        alert(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div id=\"explore\">\r\n        <h1>\r\n          Explore <strong>Expresso</strong> Write-Ups\r\n        </h1>\r\n        <br />\r\n        <h4>Start Swiping</h4>\r\n\r\n        <div\r\n          style={{\r\n            display: \"flex\",\r\n            flexDirection: \"row\",\r\n          }}\r\n        >\r\n          Category of your Expresso:\r\n          <select\r\n            name=\"category\"\r\n            value={category}\r\n            onChange={(e) => {\r\n              setCategory(e.target.value);\r\n            }}\r\n            // onClick={handleFilterToggle}\r\n          >\r\n            <option value=\"\">None</option>\r\n            <option value=\"Lifestyle\">Lifestyle</option>\r\n            <option value=\"Fashion\">Fashion</option>\r\n            <option value=\"Food\">Food</option>\r\n            <option value=\"Travel\">Travel</option>\r\n            <option value=\"Music\">Music</option>\r\n            <option value=\"Art\">Art</option>\r\n            <option value=\"Fitness\">Fitness</option>\r\n            <option value=\"DIY\">DIY</option>\r\n            <option value=\"Sports\">Sports</option>\r\n            <option value=\"Finance\">Finance</option>\r\n            <option value=\"Business\">Business</option>\r\n            <option value=\"Personal\">Personal</option>\r\n            <option value=\"Movies/TV Show\">Movies/TV Show</option>\r\n            <option value=\"News\">News</option>\r\n            <option value=\"Fan Theory\">Fan Theory</option>\r\n          </select>\r\n          <button\r\n            style={{ height: 50, width: 80, fontSize: \"16px\" }}\r\n            onClick={handleFilterToggle}\r\n          >\r\n            Filter List\r\n          </button>\r\n        </div>\r\n\r\n        {isFilterOn ? (\r\n          <div className=\"tinderCard-container\">\r\n            {filteredData.map((item, index) => {\r\n              return (\r\n                <TinderCard\r\n                  className=\"swipe\"\r\n                  preventSwipe={[\"up\", \"down\"]}\r\n                  onSwipe={(dir) => swiped(dir, item._id)}\r\n                >\r\n                  <div\r\n                    className=\"blog-card\"\r\n                    onDoubleClick={() => buttonRefs.current[index].open()}\r\n                  >\r\n                    <img\r\n                      src={\r\n                        `${backendUrl}/` +\r\n                        item.image.replace(\r\n                          \"http://localhost:3000/users/me/\",\r\n                          \"\"\r\n                        )\r\n                      }\r\n                      alt=\"dummy\"\r\n                      style={{\r\n                        height: 500,\r\n                        width: 500,\r\n                        objectFit: \"contain\",\r\n                      }}\r\n                    />\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        flexDirection: \"column\",\r\n                      }}\r\n                    >\r\n                      <p>{item.title}</p>\r\n                      <p>{item.category}</p>\r\n                    </div>\r\n                    <Popup\r\n                      key={item._id}\r\n                      ref={(ref) => (buttonRefs.current[index] = ref)}\r\n                      trigger={\r\n                        <button style={{ display: \"none\" }}>View me</button>\r\n                      }\r\n                      modal\r\n                      overlayStyle={{\r\n                        overflowY: \"auto\",\r\n                        background: \"black\",\r\n                      }}\r\n                      closeOnDocumentClick=\"false\"\r\n                    >\r\n                      {(close) => (\r\n                        <div className=\"popup-content\">\r\n                          <button className=\"popup-close\" onClick={close}>\r\n                            &times;\r\n                          </button>\r\n                          <RenderPost\r\n                            imageSrc={\r\n                              `${backendUrl}/` +\r\n                              item.image.replace(\r\n                                \"http://localhost:3000/users/me/\",\r\n                                \"\"\r\n                              )\r\n                            }\r\n                            title={item.title}\r\n                            category={item.category}\r\n                            mainBlog={item.mainBlog}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                    </Popup>\r\n                  </div>\r\n                </TinderCard>\r\n              );\r\n            })}\r\n          </div>\r\n        ) : (\r\n          <div className=\"tinderCard-container\">\r\n            {data.map((item, index) => {\r\n              return (\r\n                <TinderCard\r\n                  className=\"swipe\"\r\n                  preventSwipe={[\"up\", \"down\"]}\r\n                  onSwipe={(dir) => swiped(dir, item._id)}\r\n                >\r\n                  <div\r\n                    className=\"blog-card\"\r\n                    onDoubleClick={() => buttonRefs.current[index].open()}\r\n                  >\r\n                    <img\r\n                      src={\r\n                        `${backendUrl}/` +\r\n                        item.image.replace(\r\n                          \"http://localhost:3000/users/me/\",\r\n                          \"\"\r\n                        )\r\n                      }\r\n                      alt=\"dummy\"\r\n                      style={{\r\n                        height: 500,\r\n                        width: 500,\r\n                        objectFit: \"contain\",\r\n                      }}\r\n                    />\r\n                    <div\r\n                      style={{\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                        alignItems: \"center\",\r\n                        flexDirection: \"column\",\r\n                      }}\r\n                    >\r\n                      <p>{item.title}</p>\r\n                      <p>{item.category}</p>\r\n                    </div>\r\n                    <Popup\r\n                      key={item._id}\r\n                      ref={(ref) => (buttonRefs.current[index] = ref)}\r\n                      trigger={\r\n                        <button style={{ display: \"none\" }}>View me</button>\r\n                      }\r\n                      modal\r\n                      overlayStyle={{\r\n                        overflowY: \"auto\",\r\n                        background: \"black\",\r\n                      }}\r\n                      closeOnDocumentClick=\"false\"\r\n                    >\r\n                      {(close) => (\r\n                        <div className=\"popup-content\">\r\n                          <button className=\"popup-close\" onClick={close}>\r\n                            &times;\r\n                          </button>\r\n                          <RenderPost\r\n                            imageSrc={\r\n                              `${backendUrl}/` +\r\n                              item.image.replace(\r\n                                \"http://localhost:3000/users/me/\",\r\n                                \"\"\r\n                              )\r\n                            }\r\n                            title={item.title}\r\n                            category={item.category}\r\n                            mainBlog={item.mainBlog}\r\n                          />\r\n                        </div>\r\n                      )}\r\n                    </Popup>\r\n                  </div>\r\n                </TinderCard>\r\n              );\r\n            })}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Explore;\r\n","K:\\1_IIDE_SOC\\~Project\\Main client\\ExpressIt\\src\\components\\ProtectedRoute.js",[],"K:\\1_IIDE_SOC\\~Project\\Main client\\ExpressIt\\src\\components\\CreateExpresso.js",["102","103","104"],"import React, { createRef, useRef, useState } from \"react\";\r\nimport Axios from \"axios\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport backendUrl from \"../config\";\r\n\r\nimport \"../CreateExpresso.css\";\r\n\r\nfunction CreateExpresso() {\r\n  const history = useHistory();\r\n\r\n  const [title, setTitle] = useState(\"\");\r\n  const [category, setCategory] = useState(\"Lifestyle\");\r\n  const [mainBlog, setMainBlog] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const validate = () => {\r\n    let titleError = \"\";\r\n    let categoryError = \"\";\r\n    let mainBlogError = \"\";\r\n\r\n    if (title === \"\") {\r\n      titleError = \"Enter Some Title for your article\";\r\n    }\r\n    if (category === \"\") {\r\n      categoryError = \"Specify the category from the list \";\r\n    }\r\n    if (mainBlog === \"\") {\r\n      mainBlogError = \"Put some words in your article\";\r\n    }\r\n\r\n    if (titleError || categoryError || mainBlogError) {\r\n      setErrors({\r\n        ...errors,\r\n        title: titleError,\r\n        category: categoryError,\r\n        mainBlog: mainBlogError,\r\n      });\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleCreateExpresso = async () => {\r\n    const dataToSend = {\r\n      title: title,\r\n      category: category,\r\n      mainBlog: mainBlog,\r\n    };\r\n    const isValid = validate();\r\n    if (isValid) {\r\n      setErrors({});\r\n      try {\r\n        const form = new FormData();\r\n        form.append(\"image\", image);\r\n        form.append(\"title\", title);\r\n        form.append(\"category\", category);\r\n        form.append(\"mainBlog\", mainBlog);\r\n        // const newData = form.getAll();\r\n\r\n        const res = await Axios.post(\r\n          `${backendUrl}/users/me/createExpresso`,\r\n          form,\r\n          {\r\n            headers: { Authorization: localStorage.getItem(\"SavedToken\") },\r\n          }\r\n        );\r\n        history.push(\"/users/me/profile\");\r\n        console.log(res);\r\n      } catch (error) {\r\n        alert(error);\r\n      }\r\n    }\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"clicked submit\");\r\n    handleCreateExpresso();\r\n  };\r\n\r\n  return (\r\n    <div id=\"write-up\">\r\n      <div id=\"write-up-info\">\r\n        <h1>\r\n          Make your own <strong>Expresso</strong> Write-Up!\r\n        </h1>\r\n        <p>\r\n          Express yourself and share the experience with others in your own\r\n          words.\r\n        </p>\r\n      </div>\r\n\r\n      <div id=\"write-up-content\">\r\n        <form\r\n          onSubmit={handleSubmit}\r\n          method=\"post\"\r\n          encType=\"multipart/form-data\"\r\n          action=\"/users/me/createExpresso\"\r\n        >\r\n          <div>Title of your Expresso</div>\r\n          <input\r\n            type=\"text\"\r\n            name=\"title\"\r\n            className=\"write-up-input\"\r\n            onChange={(e) => {\r\n              setTitle(e.target.value);\r\n            }}\r\n            value={title}\r\n          />\r\n          <div className=\"text-danger\">{errors.title}</div>\r\n\r\n          <br />\r\n\r\n          <div>\r\n            <input\r\n              type=\"file\"\r\n              name=\"image\"\r\n              accept=\"image/*\"\r\n              onChange={(e) => {\r\n                setImage(e.target.files[0]);\r\n              }}\r\n            />\r\n          </div>\r\n\r\n          <br />\r\n\r\n          <div>\r\n            Category of your Expresso:\r\n            <select\r\n              name=\"category\"\r\n              value={category}\r\n              onChange={(e) => {\r\n                setCategory(e.target.value);\r\n              }}\r\n            >\r\n              <option value=\"Lifestyle\">Lifestyle</option>\r\n              <option value=\"Fashion\">Fashion</option>\r\n              <option value=\"Food\">Food</option>\r\n              <option value=\"Travel\">Travel</option>\r\n              <option value=\"Music\">Music</option>\r\n              <option value=\"Art\">Art</option>\r\n              <option value=\"Fitness\">Fitness</option>\r\n              <option value=\"DIY\">DIY</option>\r\n              <option value=\"Sports\">Sports</option>\r\n              <option value=\"Finance\">Finance</option>\r\n              <option value=\"Business\">Business</option>\r\n              <option value=\"Personal\">Personal</option>\r\n              <option value=\"Movies/TV Show\">Movies/TV Show</option>\r\n              <option value=\"News\">News</option>\r\n              <option value=\"Fan Theory\">Fan Theory</option>\r\n            </select>\r\n            <div className=\"text-danger\">{errors.category}</div>\r\n          </div>\r\n          <div>Your Expresso!</div>\r\n          <textarea\r\n            type=\"text\"\r\n            name=\"mainBlog\"\r\n            className=\"article\"\r\n            onChange={(e) => {\r\n              setMainBlog(e.target.value);\r\n            }}\r\n            value={mainBlog}\r\n          />\r\n          <div className=\"text-danger\">{errors.mainBlog}</div>\r\n\r\n          <br />\r\n\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Create Expresso\"\r\n            className=\"submit-btn\"\r\n            onClick={handleSubmit}\r\n          />\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateExpresso;\r\n","K:\\1_IIDE_SOC\\~Project\\Main client\\ExpressIt\\src\\components\\Favourites.js",[],"K:\\1_IIDE_SOC\\~Project\\Main client\\ExpressIt\\src\\components\\About.js",[],"K:\\1_IIDE_SOC\\~Project\\Main client\\ExpressIt\\src\\components\\Landing.js",[],"K:\\1_IIDE_SOC\\~Project\\Main client\\ExpressIt\\src\\components\\Contact.js",[],"K:\\1_IIDE_SOC\\~Project\\Main client\\ExpressIt\\src\\components\\RenderPost.js",[],"K:\\1_IIDE_SOC\\~Project\\Main client\\ExpressIt\\src\\components\\RenderAuthButton.js",[],"K:\\1_IIDE_SOC\\~Project\\Main client\\ExpressIt\\src\\config.js",[],{"ruleId":"105","replacedBy":"106"},{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":2,"column":50,"nodeType":"111","messageId":"112","endLine":2,"endColumn":54},{"ruleId":"109","severity":1,"message":"113","line":3,"column":8,"nodeType":"111","messageId":"112","endLine":3,"endColumn":14},{"ruleId":"109","severity":1,"message":"114","line":7,"column":8,"nodeType":"111","messageId":"112","endLine":7,"endColumn":15},{"ruleId":"109","severity":1,"message":"115","line":8,"column":8,"nodeType":"111","messageId":"112","endLine":8,"endColumn":21},{"ruleId":"109","severity":1,"message":"116","line":9,"column":8,"nodeType":"111","messageId":"112","endLine":9,"endColumn":22},{"ruleId":"109","severity":1,"message":"117","line":10,"column":8,"nodeType":"111","messageId":"112","endLine":10,"endColumn":15},{"ruleId":"109","severity":1,"message":"118","line":11,"column":8,"nodeType":"111","messageId":"112","endLine":11,"endColumn":18},{"ruleId":"109","severity":1,"message":"119","line":9,"column":10,"nodeType":"111","messageId":"112","endLine":9,"endColumn":14},{"ruleId":"109","severity":1,"message":"120","line":63,"column":11,"nodeType":"111","messageId":"112","endLine":63,"endColumn":21},{"ruleId":"109","severity":1,"message":"121","line":3,"column":8,"nodeType":"111","messageId":"112","endLine":3,"endColumn":13},{"ruleId":"109","severity":1,"message":"122","line":4,"column":8,"nodeType":"111","messageId":"112","endLine":4,"endColumn":16},{"ruleId":"109","severity":1,"message":"123","line":5,"column":8,"nodeType":"111","messageId":"112","endLine":5,"endColumn":12},{"ruleId":"109","severity":1,"message":"124","line":9,"column":20,"nodeType":"111","messageId":"112","endLine":9,"endColumn":26},{"ruleId":"109","severity":1,"message":"125","line":10,"column":3,"nodeType":"111","messageId":"112","endLine":10,"endColumn":9},{"ruleId":"109","severity":1,"message":"126","line":11,"column":3,"nodeType":"111","messageId":"112","endLine":11,"endColumn":8},{"ruleId":"109","severity":1,"message":"127","line":11,"column":8,"nodeType":"111","messageId":"112","endLine":11,"endColumn":21},{"ruleId":"109","severity":1,"message":"128","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":26},{"ruleId":"109","severity":1,"message":"129","line":1,"column":28,"nodeType":"111","messageId":"112","endLine":1,"endColumn":34},{"ruleId":"109","severity":1,"message":"120","line":45,"column":11,"nodeType":"111","messageId":"112","endLine":45,"endColumn":21},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Navbar' is defined but never used.","'Profile' is defined but never used.","'CreateProfile' is defined but never used.","'CreateExpresso' is defined but never used.","'Explore' is defined but never used.","'Favourites' is defined but never used.","'data' is assigned a value but never used.","'dataToSend' is assigned a value but never used.","'Login' is defined but never used.","'Register' is defined but never used.","'Home' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'PullToRefresh' is defined but never used.","'createRef' is defined but never used.","'useRef' is defined but never used.","no-global-assign","no-unsafe-negation"]